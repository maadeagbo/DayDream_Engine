#version 430
layout (local_size_x = 4, local_size_y = 4) in;

layout (rgba16f, binding = 0) uniform image2D img_input;
layout (rgba16f, binding = 1) uniform image2D img_output;

shared vec4 localData[gl_WorkGroupSize.x][gl_WorkGroupSize.y];

uniform bool computeLum;

void main () {
	// get index in global work group i.e x,y position
	ivec2 pixel_coords = ivec2 (gl_GlobalInvocationID.xy);
	vec4 color = imageLoad(img_input, pixel_coords);
	if (computeLum) {
		// calculate luminance for pixel
		float pixel = dot( color.rgb, vec3(0.2126, 0.7152, 0.0722));
		pixel = log( pixel + 0.00001);
		color = vec4(pixel, pixel, pixel, 1.0);
	}
	localData[gl_LocalInvocationID.x][gl_LocalInvocationID.y] = color;
	barrier();

	// loop thru work group local data
	vec4 avgColor = vec4(0.0);
	uint width = gl_WorkGroupSize.x;
	uint height = gl_WorkGroupSize.y;
	uint local_size = width * height;
	for(uint i = 0; i < width; ++i) {
		for(uint j = 0; j < height; ++j) {
			avgColor += localData[i][j];
		}
	}
	avgColor /= local_size;
  

	// output to a specific pixel in the image
	//imageStore (img_output, pixel_coords, vec4(pixel, pixel, pixel, 1.0) );
	pixel_coords = ivec2 (gl_WorkGroupID.xy);
	imageStore (img_output, pixel_coords, avgColor );
}
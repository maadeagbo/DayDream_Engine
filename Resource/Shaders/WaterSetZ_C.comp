#version 430
layout (local_size_x = 10, local_size_y = 10) in;

layout ( std430, binding = 0 ) buffer PosIn { vec4 P_In[]; };
layout ( std430, binding = 1 ) buffer VelIn { vec4 V_In[]; };
layout ( std430, binding = 2 ) buffer MidZOut { vec4 MZ_Out[]; };

uniform float Gravity;
uniform float deltaT;
uniform float zDist;

float sqr(float val) { return val * val; }

void main() {
    // Get number of point and current index in point array
	uvec3 total_p = gl_NumWorkGroups * gl_WorkGroupSize;
    const uint _x = gl_GlobalInvocationID.x;
    const uint _y = gl_GlobalInvocationID.y;

	const uint idx = _y * total_p.x + _x;
	uint i_z = idx + 1;
    const float g = Gravity;

    if (_x < (total_p.x - 1)) {
        float h1z = P_In[i_z].y;
        float u1z = V_In[i_z].z;
        float h0 = P_In[idx].y;
        float u0 = V_In[idx].z;

        float ux, uz, midh;
        uz = (u0 + u1z) * 0.5 - (deltaT/(0.5 * zDist)) *
             (sqr(u1z)/h1z + 0.5 * g * sqr(h1z) - sqr(u0)/h0 - 0.5 * g * sqr(h0));
        midh = (h0 + h1z) * 0.5 - (deltaT * 0.5) * (u1z - u0)/zDist;
        
        MZ_Out[idx] = vec4(idx, midh, uz, 0.f); // store calculated z values
    }
}